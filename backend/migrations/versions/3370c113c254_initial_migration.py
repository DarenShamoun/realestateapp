"""initial migration

Revision ID: 3370c113c254
Revises: 
Create Date: 2023-12-25 02:08:25.364633

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '3370c113c254'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('property_type', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('purchase_price', sa.Float(), nullable=True),
    sa.Column('year_built', sa.Integer(), nullable=True),
    sa.Column('square_footage', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("property_type IN ('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL')"),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tenant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('primary_phone', sa.String(length=20), nullable=False),
    sa.Column('secondary_phone', sa.String(length=20), nullable=True),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('contact_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('unit_number', sa.String(length=20), nullable=False),
    sa.Column('rent_status', sa.String(length=50), nullable=True),
    sa.Column('is_occupied', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_unit_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_unit_tenant_id'), ['tenant_id'], unique=False)

    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_unit_id'), ['unit_id'], unique=False)

    op.create_table('lease',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('monthly_rent', sa.Float(), nullable=False),
    sa.Column('deposit', sa.Float(), nullable=True),
    sa.Column('terms', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lease', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lease_tenant_id'), ['tenant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lease_unit_id'), ['unit_id'], unique=False)

    op.create_table('rent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('rent', sa.Float(), nullable=False),
    sa.Column('trash', sa.Float(), nullable=False),
    sa.Column('water_sewer', sa.Float(), nullable=False),
    sa.Column('parking', sa.Float(), nullable=False),
    sa.Column('debt', sa.Float(), nullable=False),
    sa.Column('breaks', sa.Float(), nullable=False),
    sa.Column('total_rent', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('rent', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rent_unit_id'), ['unit_id'], unique=False)

    op.create_table('rent_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('old_rent', sa.Float(), nullable=False),
    sa.Column('new_rent', sa.Float(), nullable=False),
    sa.Column('change_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lease_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('receipt_number', sa.String(length=100), nullable=True),
    sa.Column('is_partial', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['lease_id'], ['lease.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('receipt_number')
    )
    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_lease_id'), ['lease_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_tenant_id'), ['tenant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_unit_id'), ['unit_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_unit_id'))
        batch_op.drop_index(batch_op.f('ix_payment_tenant_id'))
        batch_op.drop_index(batch_op.f('ix_payment_lease_id'))

    op.drop_table('payment')
    op.drop_table('rent_history')
    with op.batch_alter_table('rent', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rent_unit_id'))

    op.drop_table('rent')
    with op.batch_alter_table('lease', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lease_unit_id'))
        batch_op.drop_index(batch_op.f('ix_lease_tenant_id'))

    op.drop_table('lease')
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_unit_id'))
        batch_op.drop_index(batch_op.f('ix_expense_property_id'))

    op.drop_table('expense')
    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_unit_tenant_id'))
        batch_op.drop_index(batch_op.f('ix_unit_property_id'))

    op.drop_table('unit')
    op.drop_table('tenant')
    op.drop_table('property')
    # ### end Alembic commands ###
