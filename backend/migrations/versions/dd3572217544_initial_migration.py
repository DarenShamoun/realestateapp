"""Initial migration.

Revision ID: dd3572217544
Revises: 
Create Date: 2023-12-25 01:25:05.382295

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dd3572217544'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rent_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('old_rent', sa.Float(), nullable=False),
    sa.Column('new_rent', sa.Float(), nullable=False),
    sa.Column('change_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_expense_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_unit_id'), ['unit_id'], unique=False)
        batch_op.create_foreign_key(None, 'unit', ['unit_id'], ['id'])

    with op.batch_alter_table('lease', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_lease_tenant_id'), ['tenant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lease_unit_id'), ['unit_id'], unique=False)

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('receipt_number', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('is_partial', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_payment_lease_id'), ['lease_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_tenant_id'), ['tenant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_unit_id'), ['unit_id'], unique=False)
        batch_op.create_unique_constraint(None, ['receipt_number'])

    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('property_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL', name='propertytype'),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('rent', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_rent', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_rent_unit_id'), ['unit_id'], unique=False)

    with op.batch_alter_table('tenant', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('rent_status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_unit_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_unit_tenant_id'), ['tenant_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_unit_tenant_id'))
        batch_op.drop_index(batch_op.f('ix_unit_property_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('rent_status')

    with op.batch_alter_table('tenant', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('email')

    with op.batch_alter_table('rent', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rent_unit_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('total_rent')

    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('property_type',
               existing_type=sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL', name='propertytype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_payment_unit_id'))
        batch_op.drop_index(batch_op.f('ix_payment_tenant_id'))
        batch_op.drop_index(batch_op.f('ix_payment_lease_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_partial')
        batch_op.drop_column('receipt_number')

    with op.batch_alter_table('lease', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lease_unit_id'))
        batch_op.drop_index(batch_op.f('ix_lease_tenant_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('status')

    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_expense_unit_id'))
        batch_op.drop_index(batch_op.f('ix_expense_property_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('unit_id')

    op.drop_table('rent_history')
    # ### end Alembic commands ###
